#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keypos_36keys.h"

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define ADJ 3

#define COMBO_FAST 20

&lt {
    tapping-term-ms = <100>;
};

&kscan0 {
    debounce-press-ms = <6>;
    debounce-release-ms = <6>;
};

/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

/ {
        chosen {
            zmk,matrix_transform = &skeletyl_transform;
        };

        behaviors {
            hm: hm {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <200>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };

            tm: tm {
                compatible = "zmk,behavior-hold-tap";
                label = "THUMB_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <100>;
                quick-tap-ms = <200>;
                flavor = "hold-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        combos {
            compatible = "zmk,combos";

            // left hand combos
            combo_esc = {
                timeout_ms = <COMBO_FAST>;
                key-positions = <LT3 LT1>;
                bindings = <&kp ESC>;
                global-quick-tap-ms = <150>;
            };
            combo_ret = {
                timeout_ms = <COMBO_FAST>;
                key-positions = <LT3 LT2>;
                bindings = <&kp RET>;
                global-quick-tap-ms = <150>;
            };
            combo_tab = {
                timeout_ms = <COMBO_FAST>;
                key-positions = <LT2 LT1>;
                bindings = <&kp TAB>;
                global-quick-tap-ms = <150>;
            };

            // right hand combos
            combo_bspc = {
                timeout_ms = <COMBO_FAST>;
                key-positions = <RT1 RT2>;
                bindings = <&kp BSPC>;
                global-quick-tap-ms = <150>;
            };
            combo_del = {
                timeout_ms = <COMBO_FAST>;
                key-positions = <RT2 RT3>;
                bindings = <&kp DEL>;
                global-quick-tap-ms = <150>;
            };
        };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | SYM | SHFT |   | SPC | NUM  | ALT |
                        bindings = <
   &kp Q       &kp W       &kp E         &kp R       &kp T         &kp Y        &kp U       &kp I        &kp O       &kp P
   &kp A       &hm LCTRL S &hm LALT D    &hm LGUI F  &kp G         &kp H        &hm RGUI J  &hm RALT K   &hm RCTRL L &kp SEMI
   &hm LSHFT Z &kp X       &kp C         &kp V       &kp B         &kp N        &kp M       &kp COMMA    &kp DOT     &hm RSHFT FSLH
                           &kp LSHFT     &lt SYM ESC &tm LGUI BSPC &tm RALT TAB &lt NUM RET &kp SPACE
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     |     |     |     |   |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   |  4  |  5  |  6  |  /  |
// | SFT |     |     |     |     |   |  1  |  2  |  3  |  .  |
//             |     | ADJ |     |   |     |     |
                        bindings = <
   &bt BT_CLR   &none        &none        &none        &none             &none  &kp N7 &kp N8 &kp N9 &kp N0
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &none  &kp N4 &kp N5 &kp N6 &kp FSLH
   &kp LSFT     &none        &none        &none        &none             &none  &kp N1 &kp N2 &kp N3 &kp DOT
                             &trans       &mo ADJ      &trans            &trans &trans &trans
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  -  |  =  |
// |  "  |  |  |  {  |  (  |  [  |   |  ]  |  )  |  }  |  \  |  '  |
// |  ~  |  `  |     |     |     |   |     |     |     |  _  |  +  |
//             |     |     |     |   |     | ADJ |     |
                        bindings = <
   &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS &kp KP_MULTIPLY &kp MINUS &kp EQUAL
   &kp DQT   &kp PIPE  &kp LBRC &kp LPAR &kp LBKT     &kp RBKT  &kp RPAR &kp RBRC        &kp BSLH  &kp SQT
   &kp TILDE &kp GRAVE &trans   &trans   &trans       &trans    &trans   &trans          &kp UNDER &kp PLUS
                       &trans   &trans   &trans       &trans    &mo ADJ  &trans
                        >;
                };

                adj_layer {
                        bindings = <
   &kp F12 &kp F7 &kp F8 &kp F9 &kp C_PP          &none    &none    &none  &none     &none
   &kp F11 &kp F4 &kp F5 &kp F6 &kp C_VOL_UP      &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
   &kp F10 &kp F1 &kp F2 &kp F3 &kp C_VOL_DN      &none    &none    &none  &none     &none
                  &trans &trans &trans            &trans   &trans   &trans
                        >;
                };
        };
};
